trigger: none

parameters:
  - name: environment
    displayName: Environment
    type: string
    default: d
    values:
    - d
    - t
    - a
    - p

variables:
- template: ../conf/${{ parameters.environment }}/variables.yml

stages:
  - stage: CI_Build
    displayName: CI
    jobs:
    - job: CI
      steps:
        # Install Python. The version must match the version on the Databricks cluster.
        - task: UsePythonVersion@0
          inputs:
            versionSpec: 3.8
          displayName: 'Use Python 3.8'

        # Install required Python modules, including databricks-connect, required to execute a unit test
        # on a cluster.
        - script: |
            pip install pytest requests setuptools wheel
            pip install -U databricks-connect==10.4.*
          displayName: 'Load Python Dependencies'

        # Use environment variables to pass Databricks login information to the Databricks Connect
        # configuration function
        - script: |
            echo "y
            $(WORKSPACE-REGION-URL)
            $(CSE-DEVELOP-PAT)
            $(EXISTING-CLUSTER-ID)
            $(WORKSPACE-ORG-ID)
            15001" | databricks-connect configure
          displayName: 'Configure DBConnect Values'

        # - script: |
        #     set dbjson={"host": "$(WORKSPACE-REGION-URL)", "token": "$(CSE-DEVELOP-PAT)", "cluster_id": "$(EXISTING-CLUSTER-ID)", "org_id": "$(WORKSPACE-ORG-ID)", "port": "15001"}
        #     echo %dbjson% > %userprofile%/.databricks-connect
        #   displayName: 'Configure DBConnect'

        - script: |
            databricks-connect test
          displayName: 'Test Databricks connect'

        - script: |
            python -m pytest --junit-xml=$(Build.Repository.LocalPath)/logs/TEST-LOCAL.xml $(Build.Repository.LocalPath)/cicd/tests/unit_test.py || true
            ls logs
          displayName: 'Run Python Unit Tests for library code'

        - task: PublishTestResults@2
          inputs:
            testResultsFiles: '**/TEST-*.xml'
            failTaskOnFailedTests: true
            publishRunAttachments: true
            
        - task: PublishBuildArtifacts@1
          displayName: 'src: notebooks'
          inputs:
            PathtoPublish: ../notebooks
            ArtifactName: notebooks

