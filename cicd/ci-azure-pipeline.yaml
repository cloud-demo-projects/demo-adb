# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger: none

parameters:
  - name: environment
    displayName: Environment
    type: string
    default: d
    values:
    - d
    - t
    - a
    - p

variables:
- template: ../conf/${{ parameters.environment }}/variables.yml

stages:
  - stage: CI_Build
    displayName: CI
    jobs:
    - job: CI
      steps:
        # Install Python. The version must match the version on the Databricks cluster.
        - task: UsePythonVersion@0
          inputs:
            versionSpec: 3.8
          displayName: 'Use Python 3.8'

        # - script: |
        #     python -m pip install --upgrade pip
        #     pip install -r requirements.txt
        #   displayName: 'Install dependencies'

        # - script: |
        #     pip install pytest pytest-azurepipelines
        #     pytest
        #   displayName: 'pytest'

        # Install required Python modules, including databricks-connect, required to execute a unit test
        # on a cluster.
        - script: |
            pip install pytest requests setuptools wheel
            pip install -U databricks-connect==7.3.*
          displayName: 'Load Python Dependencies'

        # Use environment variables to pass Databricks login information to the Databricks Connect
        # configuration function
        - script: |
            echo "y
            $(WORKSPACE-REGION-URL)
            $(CSE-DEVELOP-PAT)
            $(EXISTING-CLUSTER-ID)
            $(WORKSPACE-ORG-ID)
            15001" | databricks-connect configure
          displayName: 'Configure DBConnect'